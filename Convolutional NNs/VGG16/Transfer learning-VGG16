{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Transfer learning-VGG16","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNKNhm4UigLQUNleLyNMUaj"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"FW4TXx7i6h_6","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":122},"executionInfo":{"status":"ok","timestamp":1580205138379,"user_tz":-60,"elapsed":28704,"user":{"displayName":"MOHAMMEDHABIBALLAH KECHOUT","photoUrl":"","userId":"07713851526066351568"}},"outputId":"dc3ec6a7-72c6-45a0-c013-4c0fbc696486"},"source":["from google.colab import drive\n","drive.mount('/content/drive')\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&response_type=code&scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly\n","\n","Enter your authorization code:\n","··········\n","Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ChnQZnrYAXM7","colab_type":"code","colab":{}},"source":["import os"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"jBFrT5oQuROZ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":80},"executionInfo":{"status":"ok","timestamp":1580205146341,"user_tz":-60,"elapsed":3421,"user":{"displayName":"MOHAMMEDHABIBALLAH KECHOUT","photoUrl":"","userId":"07713851526066351568"}},"outputId":"800b0b49-9599-4e2d-efb0-cceec57d1bf3"},"source":["from keras import applications"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Using TensorFlow backend.\n"],"name":"stderr"},{"output_type":"display_data","data":{"text/html":["<p style=\"color: red;\">\n","The default version of TensorFlow in Colab will soon switch to TensorFlow 2.x.<br>\n","We recommend you <a href=\"https://www.tensorflow.org/guide/migrate\" target=\"_blank\">upgrade</a> now \n","or ensure your notebook will continue to use TensorFlow 1.x via the <code>%tensorflow_version 1.x</code> magic:\n","<a href=\"https://colab.research.google.com/notebooks/tensorflow_version.ipynb\" target=\"_blank\">more info</a>.</p>\n"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"fen2k5imvAbB","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":411},"executionInfo":{"status":"ok","timestamp":1580205163315,"user_tz":-60,"elapsed":10605,"user":{"displayName":"MOHAMMEDHABIBALLAH KECHOUT","photoUrl":"","userId":"07713851526066351568"}},"outputId":"05a80207-130f-4d65-edd6-4e1c31d4ddd3"},"source":["vgg_model=applications.VGG16(include_top=False,weights='imagenet',input_shape=(150,150,3))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:66: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:541: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:4432: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:4267: The name tf.nn.max_pool is deprecated. Please use tf.nn.max_pool2d instead.\n","\n","Downloading data from https://github.com/fchollet/deep-learning-models/releases/download/v0.1/vgg16_weights_tf_dim_ordering_tf_kernels_notop.h5\n","58892288/58889256 [==============================] - 1s 0us/step\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:190: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:197: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:203: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:207: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:216: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:223: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"RMW6SwaneBT8","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":799},"executionInfo":{"status":"ok","timestamp":1580205168746,"user_tz":-60,"elapsed":1854,"user":{"displayName":"MOHAMMEDHABIBALLAH KECHOUT","photoUrl":"","userId":"07713851526066351568"}},"outputId":"7b2edf8a-74a9-43c7-934b-97edb97a64fe"},"source":["vgg_model.summary()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Model: \"vgg16\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","input_1 (InputLayer)         (None, 150, 150, 3)       0         \n","_________________________________________________________________\n","block1_conv1 (Conv2D)        (None, 150, 150, 64)      1792      \n","_________________________________________________________________\n","block1_conv2 (Conv2D)        (None, 150, 150, 64)      36928     \n","_________________________________________________________________\n","block1_pool (MaxPooling2D)   (None, 75, 75, 64)        0         \n","_________________________________________________________________\n","block2_conv1 (Conv2D)        (None, 75, 75, 128)       73856     \n","_________________________________________________________________\n","block2_conv2 (Conv2D)        (None, 75, 75, 128)       147584    \n","_________________________________________________________________\n","block2_pool (MaxPooling2D)   (None, 37, 37, 128)       0         \n","_________________________________________________________________\n","block3_conv1 (Conv2D)        (None, 37, 37, 256)       295168    \n","_________________________________________________________________\n","block3_conv2 (Conv2D)        (None, 37, 37, 256)       590080    \n","_________________________________________________________________\n","block3_conv3 (Conv2D)        (None, 37, 37, 256)       590080    \n","_________________________________________________________________\n","block3_pool (MaxPooling2D)   (None, 18, 18, 256)       0         \n","_________________________________________________________________\n","block4_conv1 (Conv2D)        (None, 18, 18, 512)       1180160   \n","_________________________________________________________________\n","block4_conv2 (Conv2D)        (None, 18, 18, 512)       2359808   \n","_________________________________________________________________\n","block4_conv3 (Conv2D)        (None, 18, 18, 512)       2359808   \n","_________________________________________________________________\n","block4_pool (MaxPooling2D)   (None, 9, 9, 512)         0         \n","_________________________________________________________________\n","block5_conv1 (Conv2D)        (None, 9, 9, 512)         2359808   \n","_________________________________________________________________\n","block5_conv2 (Conv2D)        (None, 9, 9, 512)         2359808   \n","_________________________________________________________________\n","block5_conv3 (Conv2D)        (None, 9, 9, 512)         2359808   \n","_________________________________________________________________\n","block5_pool (MaxPooling2D)   (None, 4, 4, 512)         0         \n","=================================================================\n","Total params: 14,714,688\n","Trainable params: 14,714,688\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"roQG0X-wwPGp","colab_type":"code","colab":{}},"source":["from keras.preprocessing.image import ImageDataGenerator\n","datagen=ImageDataGenerator(rescale=1. / 255)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"LDZrBWFhwYEi","colab_type":"code","colab":{}},"source":["train_dir='/content/drive/My Drive/Rooty/Colab Notebooks/data/train'\n","val_dir='/content/drive/My Drive/Rooty/Colab Notebooks/data/validation'"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"KFZ84rmt81q0","colab_type":"code","colab":{}},"source":["import numpy as np"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"tC5SisXvxauT","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1580123439931,"user_tz":-60,"elapsed":9492,"user":{"displayName":"MOHAMMEDHABIBALLAH KECHOUT","photoUrl":"","userId":"07713851526066351568"}},"outputId":"5ae92885-4676-4e32-a637-f3b0f14e3b91"},"source":["batch_size=16\n","generator = datagen.flow_from_directory(\n","        train_dir,\n","        target_size=(150, 150),\n","        batch_size=batch_size,\n","        class_mode=None,  # this means our generator will only yield batches of data, no labels\n","        shuffle=False)  # our data will be in order, so all first 1000 images will be cats, then 1000 dogs\n","# the predict_generator method returns the output of a model, given\n","# a generator that yields batches of numpy data\n","bottleneck_features_train = vgg_model.predict_generator(generator, 2000//batch_size)\n","# save the output as a Numpy array\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Found 2000 images belonging to 2 classes.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"5IY3fqWX-XKJ","colab_type":"code","colab":{}},"source":["np.save(open('/content/drive/My Drive/Rooty/Colab Notebooks/models/bottleneck_features_train.npy', 'wb'), bottleneck_features_train)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"XVQgX4rA-2gi","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1580122495676,"user_tz":-60,"elapsed":129259,"user":{"displayName":"MOHAMMEDHABIBALLAH KECHOUT","photoUrl":"","userId":"07713851526066351568"}},"outputId":"d023fe1e-35cd-4638-d4bd-833963177b4e"},"source":["\n","generator = datagen.flow_from_directory(\n","        val_dir,\n","        target_size=(150, 150),\n","        batch_size=batch_size,\n","        class_mode=None,\n","        shuffle=False)\n","bottleneck_features_validation = vgg_model.predict_generator(generator, 800//batch_size)\n","np.save(open('/content/drive/My Drive/Rooty/Colab Notebooks/models/bottleneck_features_validation.npy', 'wb'), bottleneck_features_validation)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Found 800 images belonging to 2 classes.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"hwKMpLr0ArSG","colab_type":"code","colab":{}},"source":["import numpy as np\n","train_data = np.load(open('/content/drive/My Drive/Rooty/Colab Notebooks/models/bottleneck_features_train.npy','rb'))\n","# the features were saved in order, so recreating the labels is easy\n","train_labels = np.array([0] * 1000 + [1] * 1000)\n","\n","validation_data = np.load(open('/content/drive/My Drive/Rooty/Colab Notebooks/models/bottleneck_features_validation.npy','rb'))\n","validation_labels = np.array([0] * 400 + [1] * 400)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"bvB1GEejWhRv","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1580123934089,"user_tz":-60,"elapsed":735,"user":{"displayName":"MOHAMMEDHABIBALLAH KECHOUT","photoUrl":"","userId":"07713851526066351568"}},"outputId":"281a2c3a-cf1e-46d9-cc4f-45b9bdb2b903"},"source":["train_data.shape[:]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2000, 4, 4, 512)"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"l4ycsKMVXm4k","colab_type":"code","colab":{}},"source":["from keras.models import Sequential\n","from keras.layers import Conv2D, MaxPooling2D\n","from keras.layers import Activation, Dropout, Flatten, Dense"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"biAsNfKvfD5J","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":241},"executionInfo":{"status":"ok","timestamp":1580205202395,"user_tz":-60,"elapsed":1903,"user":{"displayName":"MOHAMMEDHABIBALLAH KECHOUT","photoUrl":"","userId":"07713851526066351568"}},"outputId":"ed1ee3ed-2251-41d8-a85f-6473feb42562"},"source":["top_model = Sequential()\n","top_model.add(Flatten(input_shape=(4,4,512)))\n","top_model.add(Dense(256, activation='relu'))\n","top_model.add(Dropout(0.5))\n","top_model.add(Dense(1, activation='sigmoid'))\n","\n","top_model.compile(optimizer='rmsprop',\n","              loss='binary_crossentropy',\n","              metrics=['accuracy'])\n","\n","top_model.load_weights('/content/drive/My Drive/Rooty/Colab Notebooks/models/bottleneck_fc_model.h5')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:148: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:3733: calling dropout (from tensorflow.python.ops.nn_ops) with keep_prob is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Please use `rate` instead of `keep_prob`. Rate should be set to `rate = 1 - keep_prob`.\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/optimizers.py:793: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:3657: The name tf.log is deprecated. Please use tf.math.log instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/ops/nn_impl.py:183: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use tf.where in 2.0, which has the same broadcast rule as np.where\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ZhFX8DK-fnby","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":289},"executionInfo":{"status":"ok","timestamp":1580205209923,"user_tz":-60,"elapsed":1054,"user":{"displayName":"MOHAMMEDHABIBALLAH KECHOUT","photoUrl":"","userId":"07713851526066351568"}},"outputId":"eecb61da-0c3f-45aa-9889-6636853278ee"},"source":["top_model.summary()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","flatten_1 (Flatten)          (None, 8192)              0         \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 256)               2097408   \n","_________________________________________________________________\n","dropout_1 (Dropout)          (None, 256)               0         \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 1)                 257       \n","=================================================================\n","Total params: 2,097,665\n","Trainable params: 2,097,665\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"NktLpo1DW1T0","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1580123980363,"user_tz":-60,"elapsed":35161,"user":{"displayName":"MOHAMMEDHABIBALLAH KECHOUT","photoUrl":"","userId":"07713851526066351568"}},"outputId":"62c50bed-720d-4356-dc5e-79a163076f81"},"source":["batch_size=16\n","\n","top_model = Sequential()\n","top_model.add(Flatten(input_shape=train_data.shape[1:]))\n","top_model.add(Dense(256, activation='relu'))\n","top_model.add(Dropout(0.5))\n","top_model.add(Dense(1, activation='sigmoid'))\n","\n","top_model.compile(optimizer='rmsprop',\n","              loss='binary_crossentropy',\n","              metrics=['accuracy'])\n","\n","top_model.fit(train_data, train_labels,\n","          epochs=50,\n","          batch_size=batch_size,\n","          validation_data=(validation_data, validation_labels))\n","top_model.save_weights('/content/drive/My Drive/Rooty/Colab Notebooks/models/bottleneck_fc_model.h5')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:148: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:3733: calling dropout (from tensorflow.python.ops.nn_ops) with keep_prob is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Please use `rate` instead of `keep_prob`. Rate should be set to `rate = 1 - keep_prob`.\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/optimizers.py:793: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:3657: The name tf.log is deprecated. Please use tf.math.log instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/ops/nn_impl.py:183: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use tf.where in 2.0, which has the same broadcast rule as np.where\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:1033: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:1020: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.\n","\n","Train on 2000 samples, validate on 800 samples\n","Epoch 1/50\n","2000/2000 [==============================] - 2s 1ms/step - loss: 0.6919 - acc: 0.7685 - val_loss: 0.4666 - val_acc: 0.8063\n","Epoch 2/50\n","2000/2000 [==============================] - 1s 334us/step - loss: 0.3721 - acc: 0.8360 - val_loss: 0.2952 - val_acc: 0.8612\n","Epoch 3/50\n","2000/2000 [==============================] - 1s 318us/step - loss: 0.3298 - acc: 0.8670 - val_loss: 0.3560 - val_acc: 0.8600\n","Epoch 4/50\n","2000/2000 [==============================] - 1s 314us/step - loss: 0.2740 - acc: 0.8860 - val_loss: 0.3231 - val_acc: 0.8850\n","Epoch 5/50\n","2000/2000 [==============================] - 1s 344us/step - loss: 0.2422 - acc: 0.9095 - val_loss: 0.2992 - val_acc: 0.8800\n","Epoch 6/50\n","2000/2000 [==============================] - 1s 322us/step - loss: 0.2274 - acc: 0.9150 - val_loss: 0.3285 - val_acc: 0.8662\n","Epoch 7/50\n","2000/2000 [==============================] - 1s 312us/step - loss: 0.2053 - acc: 0.9140 - val_loss: 0.3207 - val_acc: 0.8862\n","Epoch 8/50\n","2000/2000 [==============================] - 1s 328us/step - loss: 0.1784 - acc: 0.9315 - val_loss: 0.3957 - val_acc: 0.8750\n","Epoch 9/50\n","2000/2000 [==============================] - 1s 323us/step - loss: 0.1782 - acc: 0.9385 - val_loss: 0.3849 - val_acc: 0.8750\n","Epoch 10/50\n","2000/2000 [==============================] - 1s 318us/step - loss: 0.1374 - acc: 0.9500 - val_loss: 0.3371 - val_acc: 0.8850\n","Epoch 11/50\n","2000/2000 [==============================] - 1s 327us/step - loss: 0.1254 - acc: 0.9490 - val_loss: 0.4333 - val_acc: 0.8862\n","Epoch 12/50\n","2000/2000 [==============================] - 1s 354us/step - loss: 0.1239 - acc: 0.9550 - val_loss: 0.4557 - val_acc: 0.8762\n","Epoch 13/50\n","2000/2000 [==============================] - 1s 313us/step - loss: 0.1010 - acc: 0.9605 - val_loss: 0.4894 - val_acc: 0.8812\n","Epoch 14/50\n","2000/2000 [==============================] - 1s 315us/step - loss: 0.0819 - acc: 0.9685 - val_loss: 0.6128 - val_acc: 0.8825\n","Epoch 15/50\n","2000/2000 [==============================] - 1s 310us/step - loss: 0.0801 - acc: 0.9700 - val_loss: 0.5000 - val_acc: 0.8800\n","Epoch 16/50\n","2000/2000 [==============================] - 1s 332us/step - loss: 0.0669 - acc: 0.9750 - val_loss: 0.4895 - val_acc: 0.8812\n","Epoch 17/50\n","2000/2000 [==============================] - 1s 332us/step - loss: 0.0883 - acc: 0.9695 - val_loss: 0.5890 - val_acc: 0.8862\n","Epoch 18/50\n","2000/2000 [==============================] - 1s 321us/step - loss: 0.0726 - acc: 0.9750 - val_loss: 0.6465 - val_acc: 0.8800\n","Epoch 19/50\n","2000/2000 [==============================] - 1s 327us/step - loss: 0.0586 - acc: 0.9775 - val_loss: 0.5567 - val_acc: 0.8800\n","Epoch 20/50\n","2000/2000 [==============================] - 1s 323us/step - loss: 0.0550 - acc: 0.9795 - val_loss: 0.9024 - val_acc: 0.8325\n","Epoch 21/50\n","2000/2000 [==============================] - 1s 323us/step - loss: 0.0555 - acc: 0.9810 - val_loss: 1.0833 - val_acc: 0.8550\n","Epoch 22/50\n","2000/2000 [==============================] - 1s 321us/step - loss: 0.0434 - acc: 0.9815 - val_loss: 0.6292 - val_acc: 0.8838\n","Epoch 23/50\n","2000/2000 [==============================] - 1s 302us/step - loss: 0.0469 - acc: 0.9815 - val_loss: 0.7975 - val_acc: 0.8725\n","Epoch 24/50\n","2000/2000 [==============================] - 1s 316us/step - loss: 0.0367 - acc: 0.9860 - val_loss: 0.7719 - val_acc: 0.8712\n","Epoch 25/50\n","2000/2000 [==============================] - 1s 325us/step - loss: 0.0307 - acc: 0.9880 - val_loss: 0.7138 - val_acc: 0.8762\n","Epoch 26/50\n","2000/2000 [==============================] - 1s 319us/step - loss: 0.0325 - acc: 0.9890 - val_loss: 0.7488 - val_acc: 0.8712\n","Epoch 27/50\n","2000/2000 [==============================] - 1s 321us/step - loss: 0.0291 - acc: 0.9905 - val_loss: 0.8373 - val_acc: 0.8800\n","Epoch 28/50\n","2000/2000 [==============================] - 1s 332us/step - loss: 0.0315 - acc: 0.9890 - val_loss: 0.8471 - val_acc: 0.8800\n","Epoch 29/50\n","2000/2000 [==============================] - 1s 314us/step - loss: 0.0277 - acc: 0.9920 - val_loss: 0.8010 - val_acc: 0.8800\n","Epoch 30/50\n","2000/2000 [==============================] - 1s 340us/step - loss: 0.0443 - acc: 0.9890 - val_loss: 0.7036 - val_acc: 0.8850\n","Epoch 31/50\n","2000/2000 [==============================] - 1s 299us/step - loss: 0.0264 - acc: 0.9890 - val_loss: 0.8274 - val_acc: 0.8725\n","Epoch 32/50\n","2000/2000 [==============================] - 1s 321us/step - loss: 0.0115 - acc: 0.9955 - val_loss: 0.8219 - val_acc: 0.8812\n","Epoch 33/50\n","2000/2000 [==============================] - 1s 302us/step - loss: 0.0171 - acc: 0.9940 - val_loss: 0.7748 - val_acc: 0.8850\n","Epoch 34/50\n","2000/2000 [==============================] - 1s 324us/step - loss: 0.0219 - acc: 0.9905 - val_loss: 0.8268 - val_acc: 0.8825\n","Epoch 35/50\n","2000/2000 [==============================] - 1s 315us/step - loss: 0.0219 - acc: 0.9915 - val_loss: 0.8155 - val_acc: 0.8838\n","Epoch 36/50\n","2000/2000 [==============================] - 1s 318us/step - loss: 0.0286 - acc: 0.9930 - val_loss: 0.9363 - val_acc: 0.8762\n","Epoch 37/50\n","2000/2000 [==============================] - 1s 315us/step - loss: 0.0261 - acc: 0.9945 - val_loss: 0.9938 - val_acc: 0.8812\n","Epoch 38/50\n","2000/2000 [==============================] - 1s 314us/step - loss: 0.0215 - acc: 0.9930 - val_loss: 0.9241 - val_acc: 0.8775\n","Epoch 39/50\n","2000/2000 [==============================] - 1s 307us/step - loss: 0.0127 - acc: 0.9950 - val_loss: 0.9471 - val_acc: 0.8812\n","Epoch 40/50\n","2000/2000 [==============================] - 1s 307us/step - loss: 0.0128 - acc: 0.9955 - val_loss: 0.9355 - val_acc: 0.8825\n","Epoch 41/50\n","2000/2000 [==============================] - 1s 312us/step - loss: 0.0177 - acc: 0.9940 - val_loss: 0.9073 - val_acc: 0.8825\n","Epoch 42/50\n","2000/2000 [==============================] - 1s 313us/step - loss: 0.0192 - acc: 0.9960 - val_loss: 1.0030 - val_acc: 0.8862\n","Epoch 43/50\n","2000/2000 [==============================] - 1s 303us/step - loss: 0.0254 - acc: 0.9955 - val_loss: 1.0417 - val_acc: 0.8788\n","Epoch 44/50\n","2000/2000 [==============================] - 1s 341us/step - loss: 0.0126 - acc: 0.9945 - val_loss: 1.0180 - val_acc: 0.8750\n","Epoch 45/50\n","2000/2000 [==============================] - 1s 313us/step - loss: 0.0266 - acc: 0.9940 - val_loss: 1.0245 - val_acc: 0.8812\n","Epoch 46/50\n","2000/2000 [==============================] - 1s 309us/step - loss: 0.0055 - acc: 0.9985 - val_loss: 0.9468 - val_acc: 0.8925\n","Epoch 47/50\n","2000/2000 [==============================] - 1s 312us/step - loss: 0.0154 - acc: 0.9970 - val_loss: 0.9667 - val_acc: 0.8825\n","Epoch 48/50\n","2000/2000 [==============================] - 1s 306us/step - loss: 0.0106 - acc: 0.9970 - val_loss: 0.9809 - val_acc: 0.8812\n","Epoch 49/50\n","2000/2000 [==============================] - 1s 318us/step - loss: 0.0160 - acc: 0.9940 - val_loss: 1.0744 - val_acc: 0.8812\n","Epoch 50/50\n","2000/2000 [==============================] - 1s 307us/step - loss: 0.0149 - acc: 0.9960 - val_loss: 0.9825 - val_acc: 0.8788\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"pB-nR19fp0DH","colab_type":"code","colab":{}},"source":["model=Sequential()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"XtSuTkX-uvOd","colab_type":"code","colab":{}},"source":["model.add(vgg_model)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"rS0tTvt2uxbV","colab_type":"code","colab":{}},"source":["model.add(top_model)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Iw6riD4buzzB","colab_type":"code","colab":{}},"source":["for layer in model.layers[:25]:\n","    layer.trainable = False"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"QT3MV1T4u8t9","colab_type":"code","colab":{}},"source":["from keras import optimizers\n","# compile the model with a SGD/momentum optimizer\n","# and a very slow learning rate.\n","model.compile(loss='binary_crossentropy',\n","              optimizer=optimizers.SGD(lr=1e-4, momentum=0.9),\n","              metrics=['accuracy'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"jaXagV9uvZMV","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"executionInfo":{"status":"ok","timestamp":1580124507390,"user_tz":-60,"elapsed":6432,"user":{"displayName":"MOHAMMEDHABIBALLAH KECHOUT","photoUrl":"","userId":"07713851526066351568"}},"outputId":"c326f556-22ac-4f96-8ec2-2adba2324539"},"source":["from keras.preprocessing.image import ImageDataGenerator\n","batch_size=16\n","\n","train_dir='/content/drive/My Drive/Rooty/Colab Notebooks/data/train'\n","val_dir='/content/drive/My Drive/Rooty/Colab Notebooks/data/validation'\n","\n","train_datagen = ImageDataGenerator(\n","    rescale=1. / 255,\n","    shear_range=0.2,\n","    zoom_range=0.2,\n","    horizontal_flip=True)\n","\n","test_datagen = ImageDataGenerator(rescale=1. / 255)\n","\n","train_generator = train_datagen.flow_from_directory(\n","    train_dir,\n","    target_size=(150, 150),\n","    batch_size=batch_size,\n","    class_mode='binary')\n","\n","validation_generator = test_datagen.flow_from_directory(\n","    val_dir,\n","    target_size=(150,150),\n","    batch_size=batch_size,\n","    class_mode='binary')\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Found 2000 images belonging to 2 classes.\n","Found 800 images belonging to 2 classes.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"MGDb9vmNwCKg","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1580128471340,"user_tz":-60,"elapsed":3893958,"user":{"displayName":"MOHAMMEDHABIBALLAH KECHOUT","photoUrl":"","userId":"07713851526066351568"}},"outputId":"cc73a588-7812-4eb8-dde6-5d57aa8c31c8"},"source":["# fine-tune the model\n","model.fit_generator(\n","    train_generator,\n","    samples_per_epoch=2000,\n","    epochs=50,\n","    validation_data=validation_generator,\n","    nb_val_samples=800)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:6: UserWarning: The semantics of the Keras 2 argument `steps_per_epoch` is not the same as the Keras 1 argument `samples_per_epoch`. `steps_per_epoch` is the number of batches to draw from the generator at each epoch. Basically steps_per_epoch = samples_per_epoch/batch_size. Similarly `nb_val_samples`->`validation_steps` and `val_samples`->`steps` arguments have changed. Update your method calls accordingly.\n","  \n","/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:6: UserWarning: Update your `fit_generator` call to the Keras 2 API: `fit_generator(<keras_pre..., epochs=50, validation_data=<keras_pre..., steps_per_epoch=125, validation_steps=800)`\n","  \n"],"name":"stderr"},{"output_type":"stream","text":["Epoch 1/50\n","125/125 [==============================] - 520s 4s/step - loss: 0.4022 - acc: 0.9350 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 2/50\n","125/125 [==============================] - 69s 554ms/step - loss: 0.4660 - acc: 0.9330 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 3/50\n","125/125 [==============================] - 68s 545ms/step - loss: 0.4150 - acc: 0.9380 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 4/50\n","125/125 [==============================] - 68s 545ms/step - loss: 0.4085 - acc: 0.9390 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 5/50\n","125/125 [==============================] - 68s 546ms/step - loss: 0.5294 - acc: 0.9215 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 6/50\n","125/125 [==============================] - 69s 552ms/step - loss: 0.4291 - acc: 0.9400 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 7/50\n","125/125 [==============================] - 68s 542ms/step - loss: 0.4646 - acc: 0.9325 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 8/50\n","125/125 [==============================] - 68s 543ms/step - loss: 0.5350 - acc: 0.9235 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 9/50\n","125/125 [==============================] - 67s 539ms/step - loss: 0.4851 - acc: 0.9305 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 10/50\n","125/125 [==============================] - 67s 540ms/step - loss: 0.4791 - acc: 0.9305 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 11/50\n","125/125 [==============================] - 69s 548ms/step - loss: 0.4842 - acc: 0.9250 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 12/50\n","125/125 [==============================] - 67s 537ms/step - loss: 0.4645 - acc: 0.9320 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 13/50\n","125/125 [==============================] - 68s 540ms/step - loss: 0.5239 - acc: 0.9245 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 14/50\n","125/125 [==============================] - 68s 540ms/step - loss: 0.4550 - acc: 0.9300 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 15/50\n","125/125 [==============================] - 68s 547ms/step - loss: 0.4888 - acc: 0.9310 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 16/50\n","125/125 [==============================] - 67s 538ms/step - loss: 0.4229 - acc: 0.9360 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 17/50\n","125/125 [==============================] - 67s 536ms/step - loss: 0.4563 - acc: 0.9345 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 18/50\n","125/125 [==============================] - 67s 535ms/step - loss: 0.4890 - acc: 0.9255 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 19/50\n","125/125 [==============================] - 67s 536ms/step - loss: 0.5224 - acc: 0.9275 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 20/50\n","125/125 [==============================] - 68s 543ms/step - loss: 0.4660 - acc: 0.9315 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 21/50\n","125/125 [==============================] - 67s 533ms/step - loss: 0.4649 - acc: 0.9285 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 22/50\n","125/125 [==============================] - 67s 532ms/step - loss: 0.4653 - acc: 0.9290 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 23/50\n","125/125 [==============================] - 67s 535ms/step - loss: 0.5507 - acc: 0.9270 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 24/50\n","125/125 [==============================] - 67s 534ms/step - loss: 0.4537 - acc: 0.9330 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 25/50\n","125/125 [==============================] - 67s 538ms/step - loss: 0.4761 - acc: 0.9285 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 26/50\n","125/125 [==============================] - 67s 535ms/step - loss: 0.4319 - acc: 0.9355 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 27/50\n","125/125 [==============================] - 71s 567ms/step - loss: 0.4630 - acc: 0.9335 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 28/50\n","125/125 [==============================] - 73s 586ms/step - loss: 0.4816 - acc: 0.9315 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 29/50\n","125/125 [==============================] - 72s 577ms/step - loss: 0.4757 - acc: 0.9300 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 30/50\n","125/125 [==============================] - 72s 573ms/step - loss: 0.4965 - acc: 0.9245 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 31/50\n","125/125 [==============================] - 73s 583ms/step - loss: 0.4987 - acc: 0.9315 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 32/50\n","125/125 [==============================] - 72s 580ms/step - loss: 0.5060 - acc: 0.9295 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 33/50\n","125/125 [==============================] - 71s 566ms/step - loss: 0.4565 - acc: 0.9320 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 34/50\n","125/125 [==============================] - 68s 540ms/step - loss: 0.4892 - acc: 0.9330 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 35/50\n","125/125 [==============================] - 66s 531ms/step - loss: 0.4289 - acc: 0.9330 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 36/50\n","125/125 [==============================] - 67s 538ms/step - loss: 0.4935 - acc: 0.9370 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 37/50\n","125/125 [==============================] - 67s 534ms/step - loss: 0.4594 - acc: 0.9285 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 38/50\n","125/125 [==============================] - 71s 566ms/step - loss: 0.4061 - acc: 0.9395 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 39/50\n","125/125 [==============================] - 74s 590ms/step - loss: 0.5231 - acc: 0.9190 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 40/50\n","125/125 [==============================] - 74s 592ms/step - loss: 0.4945 - acc: 0.9260 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 41/50\n","125/125 [==============================] - 72s 578ms/step - loss: 0.4967 - acc: 0.9260 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 42/50\n","125/125 [==============================] - 74s 592ms/step - loss: 0.4585 - acc: 0.9290 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 43/50\n","125/125 [==============================] - 74s 588ms/step - loss: 0.4509 - acc: 0.9355 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 44/50\n","125/125 [==============================] - 73s 581ms/step - loss: 0.4930 - acc: 0.9320 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 45/50\n","125/125 [==============================] - 69s 553ms/step - loss: 0.4559 - acc: 0.9345 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 46/50\n","125/125 [==============================] - 67s 539ms/step - loss: 0.4170 - acc: 0.9350 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 47/50\n","125/125 [==============================] - 67s 535ms/step - loss: 0.4963 - acc: 0.9275 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 48/50\n","125/125 [==============================] - 67s 533ms/step - loss: 0.4648 - acc: 0.9285 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 49/50\n","125/125 [==============================] - 66s 525ms/step - loss: 0.5084 - acc: 0.9275 - val_loss: 0.9825 - val_acc: 0.8788\n","Epoch 50/50\n","125/125 [==============================] - 65s 521ms/step - loss: 0.5630 - acc: 0.9205 - val_loss: 0.9825 - val_acc: 0.8788\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fa89eef1048>"]},"metadata":{"tags":[]},"execution_count":26}]},{"cell_type":"code","metadata":{"id":"nE0yHcD_w0Gx","colab_type":"code","colab":{}},"source":["model.save_weights('/content/drive/My Drive/Rooty/Colab Notebooks/models/finetuned_vgg.h5')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"s_dq0dPEANnJ","colab_type":"code","colab":{}},"source":["model.load_weights('/content/drive/My Drive/Rooty/Colab Notebooks/models/finetuned_vgg.h5')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"5iTbv9prkzBU","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":286},"executionInfo":{"status":"ok","timestamp":1580205774493,"user_tz":-60,"elapsed":1369,"user":{"displayName":"MOHAMMEDHABIBALLAH KECHOUT","photoUrl":"","userId":"07713851526066351568"}},"outputId":"25fbb618-5a3e-440f-c689-bc2eba3afe25"},"source":["from keras.preprocessing import image\n","import matplotlib.pyplot as plt\n","img = image.load_img(\"/content/drive/My Drive/Rooty/Colab Notebooks/data/train/dogs/dog.7695.jpg\",target_size=(150,150))\n","img = np.asarray(img)\n","plt.imshow(img)\n","img = np.expand_dims(img, axis=0)\n","\n","output = model.predict(img)\n","print(output[0][0])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["1.0\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"vN3UY92uk0_e","colab_type":"code","colab":{}},"source":["\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"S05y9SmhpFgy","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":241},"executionInfo":{"status":"ok","timestamp":1580206665070,"user_tz":-60,"elapsed":5105,"user":{"displayName":"MOHAMMEDHABIBALLAH KECHOUT","photoUrl":"","userId":"07713851526066351568"}},"outputId":"61741bdc-6afb-439c-97ac-5843b368161d"},"source":["!pip install kerassurgeon"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Collecting kerassurgeon\n","  Downloading https://files.pythonhosted.org/packages/ef/e7/8adbef95f56e2349bf9faf2aec462dee0a38cec7cd6bfb8895de83706762/kerassurgeon-0.1.3-py3-none-any.whl\n","Requirement already satisfied: keras>=2.0.7 in /usr/local/lib/python3.6/dist-packages (from kerassurgeon) (2.2.5)\n","Requirement already satisfied: pyyaml in /usr/local/lib/python3.6/dist-packages (from keras>=2.0.7->kerassurgeon) (3.13)\n","Requirement already satisfied: scipy>=0.14 in /usr/local/lib/python3.6/dist-packages (from keras>=2.0.7->kerassurgeon) (1.4.1)\n","Requirement already satisfied: six>=1.9.0 in /usr/local/lib/python3.6/dist-packages (from keras>=2.0.7->kerassurgeon) (1.12.0)\n","Requirement already satisfied: keras-preprocessing>=1.1.0 in /usr/local/lib/python3.6/dist-packages (from keras>=2.0.7->kerassurgeon) (1.1.0)\n","Requirement already satisfied: h5py in /usr/local/lib/python3.6/dist-packages (from keras>=2.0.7->kerassurgeon) (2.8.0)\n","Requirement already satisfied: keras-applications>=1.0.8 in /usr/local/lib/python3.6/dist-packages (from keras>=2.0.7->kerassurgeon) (1.0.8)\n","Requirement already satisfied: numpy>=1.9.1 in /usr/local/lib/python3.6/dist-packages (from keras>=2.0.7->kerassurgeon) (1.17.5)\n","Installing collected packages: kerassurgeon\n","Successfully installed kerassurgeon-0.1.3\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"eXEAsDY1p8ct","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1580208117563,"user_tz":-60,"elapsed":596,"user":{"displayName":"MOHAMMEDHABIBALLAH KECHOUT","photoUrl":"","userId":"07713851526066351568"}},"outputId":"a504ab5f-2717-4761-ec42-d707b3d503b2"},"source":["weight=model.layers[0].layers[1].get_weights()[0] #first layer=all vgg model (psk dernah b sequential); second layer=layers te3 vgg lui meme...\n","weight_dict={}\n","num_weights=len(weight[0,0,0,:])\n","num_weights\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["64"]},"metadata":{"tags":[]},"execution_count":78}]},{"cell_type":"code","metadata":{"id":"OpCc3sIrqhuZ","colab_type":"code","colab":{}},"source":["for j in range(num_weights):\n","  w_s=np.sum(abs(weight[:,:,:,j]))\n","  key='filt_{}'.format(j)\n","  weight_dict[key]=w_s"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"YI2qynZnqieP","colab_type":"code","colab":{}},"source":["sorted_dict=sorted(weight_dict.items(),key=lambda kv:kv[1])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"rP-1ZNjyxCqo","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1580208709806,"user_tz":-60,"elapsed":548,"user":{"displayName":"MOHAMMEDHABIBALLAH KECHOUT","photoUrl":"","userId":"07713851526066351568"}},"outputId":"5f1dde3a-61df-46f3-8902-6963d2c51bd6"},"source":["sorted_dict"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('filt_24', 1.6175919),\n"," ('filt_32', 1.8250046),\n"," ('filt_40', 2.4310503),\n"," ('filt_2', 2.495041),\n"," ('filt_52', 2.651238),\n"," ('filt_39', 2.7336175),\n"," ('filt_50', 2.7599242),\n"," ('filt_36', 2.7751088),\n"," ('filt_55', 2.8363388),\n"," ('filt_61', 2.9448466),\n"," ('filt_31', 3.0375495),\n"," ('filt_17', 3.0668314),\n"," ('filt_22', 3.107742),\n"," ('filt_13', 3.1842504),\n"," ('filt_44', 3.1984107),\n"," ('filt_16', 3.205396),\n"," ('filt_9', 3.2545583),\n"," ('filt_33', 3.270072),\n"," ('filt_1', 3.2756076),\n"," ('filt_56', 3.30176),\n"," ('filt_27', 3.3258128),\n"," ('filt_6', 3.3452435),\n"," ('filt_38', 3.3973157),\n"," ('filt_29', 3.426872),\n"," ('filt_11', 3.57709),\n"," ('filt_19', 3.6452098),\n"," ('filt_25', 3.6796942),\n"," ('filt_46', 3.8066206),\n"," ('filt_42', 3.877387),\n"," ('filt_15', 3.960729),\n"," ('filt_7', 4.0549836),\n"," ('filt_30', 4.1647773),\n"," ('filt_18', 4.3078637),\n"," ('filt_53', 4.5156593),\n"," ('filt_59', 4.601973),\n"," ('filt_5', 4.602416),\n"," ('filt_20', 4.643106),\n"," ('filt_48', 4.8627605),\n"," ('filt_54', 4.867883),\n"," ('filt_4', 4.989608),\n"," ('filt_57', 5.1788306),\n"," ('filt_8', 5.260013),\n"," ('filt_49', 5.361393),\n"," ('filt_21', 5.4634104),\n"," ('filt_43', 5.4650335),\n"," ('filt_14', 5.606433),\n"," ('filt_63', 5.688248),\n"," ('filt_60', 5.7075553),\n"," ('filt_23', 5.7656336),\n"," ('filt_28', 5.821984),\n"," ('filt_35', 5.9329214),\n"," ('filt_12', 6.1443806),\n"," ('filt_34', 6.3201685),\n"," ('filt_58', 6.36612),\n"," ('filt_41', 6.4771695),\n"," ('filt_26', 6.541752),\n"," ('filt_37', 6.7083554),\n"," ('filt_3', 6.82328),\n"," ('filt_47', 7.011265),\n"," ('filt_62', 7.3891387),\n"," ('filt_0', 7.4732213),\n"," ('filt_10', 7.766661),\n"," ('filt_51', 7.864987),\n"," ('filt_45', 8.6470175)]"]},"metadata":{"tags":[]},"execution_count":85}]},{"cell_type":"code","metadata":{"id":"pFJU5M20x12M","colab_type":"code","colab":{}},"source":["from kerassurgeon import identify\n","from kerassurgeon.operations import delete_channels,delete_layer\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"gTA-6VPZyyxB","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1580209097586,"user_tz":-60,"elapsed":758,"user":{"displayName":"MOHAMMEDHABIBALLAH KECHOUT","photoUrl":"","userId":"07713851526066351568"}},"outputId":"0933bf2c-3024-4daf-9ee5-2dcf3e5eee94"},"source":["target_layer=model.layers[0].layers[1] #conv layer lewla\n","new_model=delete_channels(model.layers[0],target_layer,[24,32,40,2,52,39])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Deleting 6/64 channels from layer: block1_conv1\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"tVN3FgZGzMw0","colab_type":"code","colab":{}},"source":["new_model.compile(optimizer='rmsprop',\n","              loss='binary_crossentropy',\n","              metrics=['accuracy'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"475hnjxdztm9","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":799},"executionInfo":{"status":"ok","timestamp":1580209282412,"user_tz":-60,"elapsed":755,"user":{"displayName":"MOHAMMEDHABIBALLAH KECHOUT","photoUrl":"","userId":"07713851526066351568"}},"outputId":"ace3c86c-3efe-46b9-849a-a9540683f234"},"source":["new_model.summary()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Model: \"model_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","input_1 (InputLayer)         (None, 150, 150, 3)       0         \n","_________________________________________________________________\n","block1_conv1 (Conv2D)        (None, 150, 150, 58)      1624      \n","_________________________________________________________________\n","block1_conv2 (Conv2D)        (None, 150, 150, 64)      33472     \n","_________________________________________________________________\n","block1_pool (MaxPooling2D)   (None, 75, 75, 64)        0         \n","_________________________________________________________________\n","block2_conv1 (Conv2D)        (None, 75, 75, 128)       73856     \n","_________________________________________________________________\n","block2_conv2 (Conv2D)        (None, 75, 75, 128)       147584    \n","_________________________________________________________________\n","block2_pool (MaxPooling2D)   (None, 37, 37, 128)       0         \n","_________________________________________________________________\n","block3_conv1 (Conv2D)        (None, 37, 37, 256)       295168    \n","_________________________________________________________________\n","block3_conv2 (Conv2D)        (None, 37, 37, 256)       590080    \n","_________________________________________________________________\n","block3_conv3 (Conv2D)        (None, 37, 37, 256)       590080    \n","_________________________________________________________________\n","block3_pool (MaxPooling2D)   (None, 18, 18, 256)       0         \n","_________________________________________________________________\n","block4_conv1 (Conv2D)        (None, 18, 18, 512)       1180160   \n","_________________________________________________________________\n","block4_conv2 (Conv2D)        (None, 18, 18, 512)       2359808   \n","_________________________________________________________________\n","block4_conv3 (Conv2D)        (None, 18, 18, 512)       2359808   \n","_________________________________________________________________\n","block4_pool (MaxPooling2D)   (None, 9, 9, 512)         0         \n","_________________________________________________________________\n","block5_conv1 (Conv2D)        (None, 9, 9, 512)         2359808   \n","_________________________________________________________________\n","block5_conv2 (Conv2D)        (None, 9, 9, 512)         2359808   \n","_________________________________________________________________\n","block5_conv3 (Conv2D)        (None, 9, 9, 512)         2359808   \n","_________________________________________________________________\n","block5_pool (MaxPooling2D)   (None, 4, 4, 512)         0         \n","=================================================================\n","Total params: 14,711,064\n","Trainable params: 14,711,064\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"5Mz_cXa_0Bli","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1580209329721,"user_tz":-60,"elapsed":549,"user":{"displayName":"MOHAMMEDHABIBALLAH KECHOUT","photoUrl":"","userId":"07713851526066351568"}},"outputId":"fbb06de5-1d49-4b14-9c63-69637305476e"},"source":["new_model.layers[2].get_weights()[0].shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3, 3, 58, 64)"]},"metadata":{"tags":[]},"execution_count":91}]},{"cell_type":"code","metadata":{"id":"f2GNzMYJ0NMc","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1580230216791,"user_tz":-60,"elapsed":1198,"user":{"displayName":"MOHAMMEDHABIBALLAH KECHOUT","photoUrl":"","userId":"07713851526066351568"}},"outputId":"9299e3d2-09ae-4937-f4b9-8ba2b7d52a42"},"source":["import subprocess\n","p = subprocess.Popen('df -h', shell=True, stdout=subprocess.PIPE)\n","print(str(p.communicate()[0], 'utf-8'))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Filesystem      Size  Used Avail Use% Mounted on\n","overlay          69G   32G   34G  49% /\n","tmpfs            64M     0   64M   0% /dev\n","tmpfs           6.4G     0  6.4G   0% /sys/fs/cgroup\n","/dev/sda1        75G   37G   38G  50% /opt/bin\n","tmpfs           6.4G   12K  6.4G   1% /var/colab\n","shm             5.9G  4.0K  5.9G   1% /dev/shm\n","tmpfs           6.4G     0  6.4G   0% /proc/acpi\n","tmpfs           6.4G     0  6.4G   0% /proc/scsi\n","tmpfs           6.4G     0  6.4G   0% /sys/firmware\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"IFnNUjnUCfJ5","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]}]}